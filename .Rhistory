common_guess <- treeco::eco_guess(
data = df_species,
have = "botanical_name",
guess = "common"
)
# Select required variables
my_inventory <- common_guess[c("original", "field_guess")]
# Add a DBH column
my_inventory$dbh <- rep(sample(2:45), length.out = 1000)
names(my_inventory)[1] <- "botanical"
names(my_inventory)[2] <- "common"
eco_run_all(
data = my_inventory,
common_col = "common",
botanical_col = "botanical",
dbh_col = "dbh",
region = "InlEmpCLM",
print_time = TRUE
)
devtools::load_all(".")
species <- treeco::species
unique_species <- unique(species$scientific_name)
unique_species_sample <- sample(unique_species, size = 50)
species <- rep(unique_species_sample, length.out = 1000)
df_species <- data.frame(botanical_name = species)
common_guess <- treeco::eco_guess(
data = df_species,
have = "botanical_name",
guess = "common"
)
# Select required variables
my_inventory <- common_guess[c("original", "field_guess")]
# Add a DBH column
my_inventory$dbh <- rep(sample(2:45), length.out = 1000)
names(my_inventory)[1] <- "botanical"
names(my_inventory)[2] <- "common"
eco_run_all(
data = my_inventory,
common_col = "common",
botanical_col = "botanical",
dbh_col = "dbh",
region = "InlEmpCLM",
print_time = TRUE
)
devtools::load_all(".")
species <- treeco::species
unique_species <- unique(species$scientific_name)
unique_species_sample <- sample(unique_species, size = 50)
species <- rep(unique_species_sample, length.out = 1000)
df_species <- data.frame(botanical_name = species)
common_guess <- treeco::eco_guess(
data = df_species,
have = "botanical_name",
guess = "common"
)
# Select required variables
my_inventory <- common_guess[c("original", "field_guess")]
# Add a DBH column
my_inventory$dbh <- rep(sample(2:45), length.out = 1000)
names(my_inventory)[1] <- "botanical"
names(my_inventory)[2] <- "common"
eco_run_all(
data = my_inventory,
common_col = "common",
botanical_col = "botanical",
dbh_col = "dbh",
region = "InlEmpCLM",
print_time = TRUE
)
devtools::load_all(".")
species <- treeco::species
unique_species <- unique(species$scientific_name)
unique_species_sample <- sample(unique_species, size = 50)
species <- rep(unique_species_sample, length.out = 1000)
df_species <- data.frame(botanical_name = species)
common_guess <- treeco::eco_guess(
data = df_species,
have = "botanical_name",
guess = "common"
)
# Select required variables
my_inventory <- common_guess[c("original", "field_guess")]
# Add a DBH column
my_inventory$dbh <- rep(sample(2:45), length.out = 1000)
names(my_inventory)[1] <- "botanical"
names(my_inventory)[2] <- "common"
eco_run_all(
data = my_inventory,
common_col = "common",
botanical_col = "botanical",
dbh_col = "dbh",
region = "InlEmpCLM",
print_time = TRUE
)
devtools::load_all(".")
devtools::load_all(".")
species <- treeco::species
unique_species <- unique(species$scientific_name)
unique_species_sample <- sample(unique_species, size = 50)
species <- rep(unique_species_sample, length.out = 1000)
df_species <- data.frame(botanical_name = species)
common_guess <- treeco::eco_guess(
data = df_species,
have = "botanical_name",
guess = "common"
)
# Select required variables
my_inventory <- common_guess[c("original", "field_guess")]
# Add a DBH column
my_inventory$dbh <- rep(sample(2:45), length.out = 1000)
names(my_inventory)[1] <- "botanical"
names(my_inventory)[2] <- "common"
eco_run_all(
data = my_inventory,
common_col = "common",
botanical_col = "botanical",
dbh_col = "dbh",
region = "InlEmpCLM",
print_time = TRUE
)
devtools::load_all(".")
library(treeco)
species <- treeco::species
unique_species <- unique(species$scientific_name)
unique_species_sample <- sample(unique_species, size = 50)
species <- rep(unique_species_sample, length.out = 1000)
df_species <- data.frame(botanical_name = species)
common_guess <- treeco::eco_guess(
data = df_species,
have = "botanical_name",
guess = "common"
)
# Select required variables
my_inventory <- common_guess[c("original", "field_guess")]
# Add a DBH column
my_inventory$dbh <- rep(sample(2:45), length.out = 1000)
names(my_inventory)[1] <- "botanical"
names(my_inventory)[2] <- "common"
treeco::eco_run_all(
data = my_inventory,
common_col = "common",
botanical_col = "botanical",
dbh_col = "dbh",
region = "InlEmpCLM",
print_time = TRUE
)
covr::report()
eco_run("Comon fig", 20, "InlEmpCLM")
devtools::load_all(".")
eco_run("Comon fig", 20, "InlEmpCLM")
devtools::load_all(".")
eco_run("Comon fig", 20, "InlEmpCLM")
devtools::load_all(".")
eco_run("Comon fig", 20, "InlEmpCLM")
devtools::install_github("tylurp/treeco")
devtools::load_all(".")
usethis::use_test("capitalize")
testthat::test_file("R/capitalize.R")
testthat::test_file("R/utils-capitalize.R")
testthat::test_that("utils-capitalize")
devtools::use_test("utils-capitalize")
capitalize <- function(tree_data, var) {
var <- paste0(
toupper(substr(tree_data[[var]], 1, 1)),
substr(tree_data[[var]], 2, nchar(tree_data[[var]]))
)
return(var)
}
capitalize("the a")
capitalize(as.data.frame(a = "the a"))
capitalize(as.data.frame(a = "the a"), a)
capitalize(as.data.frame(a = "the a"), "a")
data.frame(a = "the word")
x <- data.frame(a = "the word")
capitalize(x, "a")
x <- data.frame(a = "the word", stringsAsFactors = F)
capitalize(x, "a")
devtools::test()
devtools::test()
capitalize <- function(x) {
var <- paste0(
toupper(substr(x, 1, 1)),
substr(x, 2, nchar(x))
)
return(var)
}
capitalize("cat dog")
devtools::load_all(".")
devtools::load_all(".")
species <- treeco::species
unique_species <- unique(species$scientific_name)
unique_species_sample <- sample(unique_species, size = 50)
species <- rep(unique_species_sample, length.out = 1000)
df_species <- data.frame(botanical_name = species)
common_guess <- treeco::eco_guess(
data = df_species,
have = "botanical_name",
guess = "common"
)
# Select required variables
my_inventory <- common_guess[c("original", "field_guess")]
# Add a DBH column
my_inventory$dbh <- rep(sample(2:45), length.out = 1000)
names(my_inventory)[1] <- "botanical"
names(my_inventory)[2] <- "common"
treeco::eco_run_all(
data = my_inventory,
common_col = "common",
botanical_col = "botanical",
dbh_col = "dbh",
region = "InlEmpCLM",
print_time = TRUE
)
devtools::test()
devtools::load_all(".")
devtools::load_all(".")
species <- treeco::species
unique_species <- unique(species$scientific_name)
unique_species_sample <- sample(unique_species, size = 50)
species <- rep(unique_species_sample, length.out = 1000)
df_species <- data.frame(botanical_name = species)
common_guess <- treeco::eco_guess(
data = df_species,
have = "botanical_name",
guess = "common"
)
# Select required variables
my_inventory <- common_guess[c("original", "field_guess")]
# Add a DBH column
my_inventory$dbh <- rep(sample(2:45), length.out = 1000)
names(my_inventory)[1] <- "botanical"
names(my_inventory)[2] <- "common"
treeco::eco_run_all(
data = my_inventory,
common_col = "common",
botanical_col = "botanical",
dbh_col = "dbh",
region = "InlEmpCLM",
print_time = TRUE
)
eco_run("Comon fig", 20, "InlEmpCLM")
species <- treeco::species
unique_species <- unique(species$scientific_name)
unique_species_sample <- sample(unique_species, size = 50)
species <- rep(unique_species_sample, length.out = 1000)
df_species <- data.frame(botanical_name = species)
common_guess <- treeco::eco_guess(
data = df_species,
have = "botanical_name",
guess = "common"
)
# Select required variables
my_inventory <- common_guess[c("original", "field_guess")]
# Add a DBH column
my_inventory$dbh <- rep(sample(2:45), length.out = 1000)
names(my_inventory)[1] <- "botanical"
names(my_inventory)[2] <- "common"
eco_run_all(
data = my_inventory,
common_col = "common",
botanical_col = "botanical",
dbh_col = "dbh",
region = "InlEmpCLM",
print_time = TRUE
)
species <- species
unique_species <- unique(species$scientific_name)
unique_species_sample <- sample(unique_species, size = 50)
species <- rep(unique_species_sample, length.out = 1000)
df_species <- data.frame(botanical_name = species)
common_guess <- eco_guess(
data = df_species,
have = "botanical_name",
guess = "common"
)
# Select required variables
my_inventory <- common_guess[c("original", "field_guess")]
# Add a DBH column
my_inventory$dbh <- rep(sample(2:45), length.out = 1000)
names(my_inventory)[1] <- "botanical"
names(my_inventory)[2] <- "common"
eco_run_all(
data = my_inventory,
common_col = "common",
botanical_col = "botanical",
dbh_col = "dbh",
region = "InlEmpCLM",
print_time = TRUE
)
capitalize("1 cat 1 dog")
usethis::use_test("utils-eco_interp")
eco_interp(20, 38.10, 55.7, 53.34, 55.7)
eco_interp(20, 38.10, 55.7, 53.34, 55.7)
eco_interp(20, 38.10, 24.6, 53.34, 0.0)
eco_interp(50.8, 38.10, 55.7, 53.34, 55.7)
eco_interp(50.8, 38.10, 24.6, 53.34, 0.0)
devtools::test()
guess_common("comon fig", "InlEmpCLM")
devtools::test()
devtools::check()
covr::report()
string_dist("abc", "ab")
string_dist("abc", "abc") == 1
isTRUE(string_dist("abc", "abc") == 1)
usethis::use_test("utils-string_dist")
devtools::test()
isTRUE(string_dist("abc", "abc") == 1)
string_dist("abc", "abc")
as.numeric(string_dist("abc", "abc"))
devtools::test()
as.numeric(string_dist("abC", "abc"))
devtools::test()
round(as.numeric(string_dist("abC", "abc")))
as.numeric(string_dist("abCc", "abCc")
as.numeric(string_dist("abCc", "abCc"))
as.numeric(string_dist("abCc", "abCc"))
as.numeric(string_dist("abCc", "abcc"))
devtools::test()
as.numeric(string_dist("abC1c", "abc1c"))
as.numeric(string_dist("abc1", "abc"))
as.numeric(string_dist("..", ".."))
as.numeric(string_dist(".@1c", ".@1c"))
covr::report()
library(treeco)
species <- species
unique_species <- unique(species$scientific_name)
unique_species_sample <- sample(unique_species, size = 50)
species <- rep(unique_species_sample, length.out = 1000)
df_species <- data.frame(botanical_name = species)
common_guess <- eco_guess(
data = df_species,
have = "botanical_name",
guess = "common"
)
# Select required variables
my_inventory <- common_guess[c("original", "field_guess")]
# Add a DBH column
my_inventory$dbh <- rep(sample(2:45), length.out = 1000)
names(my_inventory)[1] <- "botanical"
names(my_inventory)[2] <- "common"
eco_run_all(
data = my_inventory,
common_col = "common",
botanical_col = "botanical",
dbh_col = "dbh",
region = "InlEmpCLM",
print_time = TRUE
)
eco_run_all(
data = my_inventory,
common_col = "common",
botanical_col = "botanical",
dbh_col = "dbh",
region = "InlEmpCLM"
)
eco_run("Comon fig", 20, "InlEmpCLM")
as.data.frame(covr::report())
rpt <- covr::report()
as.data.frame(rpt)
covr::package_coverage()
as.data.frame(covr::package_coverage())
tibble::as_tibble(covr::package_coverage())
species <- species
unique_species <- unique(species$scientific_name)
unique_species_sample <- sample(unique_species, size = 50)
species <- rep(unique_species_sample, length.out = 1000)
df_species <- data.frame(botanical_name = species)
common_guess <- eco_guess(
data = df_species,
have = "botanical_name",
guess = "common"
)
# Select required variables
my_inventory <- common_guess[c("original", "field_guess")]
# Add a DBH column
my_inventory$dbh <- rep(sample(2:45), length.out = 1000)
names(my_inventory)[1] <- "botanical"
names(my_inventory)[2] <- "common"
eco_run_all(
data = my_inventory,
common_col = "common",
botanical_col = "botanical",
dbh_col = "dbh",
region = "InlEmpCLM"
)
eco_run("Comon fig", 20, "InlEmpCLM")
devtools::test()
devtools::check()
devtools::load_all(".")
devtools::load_all(".")
library(treeco)
treeco::eco_run("comong fig", 20, "InlEmpCLM")
trees
?trees
treeco::species
library(tidyverse)
treeco::species %>%
filter(str_detect("black cherry"))
treeco::species %>%
filter(str_detect(common_name, "black cherry"))
treeco::species %>%
filter(str_detect(common_name, "Black cherry"))
trees
trees %>%
as_tibble()
trees %>%
as_tibble() %>%
mutate(common_name = "Black cherry")
trees %>%
as_tibble() %>%
mutate(common_name = "Black cherry") %>%
select(common_name, Girth)
df_trees <- trees %>%
as_tibble() %>%
mutate(common_name = "Black cherry") %>%
select(common_name, Girth)
eco_guess(df_trees, "common_name", "botanical")
trees %>%
as_tibble() %>%
mutate(common_name = "Black cherry") %>%
select(common_name, Girth) %>%
mutate(scientific_name = eco_guess("common_name", "botanical"))
trees %>%
as_tibble() %>%
mutate(common_name = "Black cherry") %>%
select(common_name, Girth) %>%
mutate(scientific_name = eco_guess(., "common_name", "botanical"))
trees %>%
as_tibble() %>%
mutate(common_name = "Black cherry") %>%
select(common_name, Girth) %>%
mutate(scientific_name = eco_guess(trees, "common_name", "botanical"))
eco_guess(df_trees, "common_name", "botanical")
eco_guess(df_trees, "common_name", "botanical")[["field_guess"]]
eco_guess(df_trees, "common_name", "botanical")
df_trees
eco_guess(df_trees, "common_name", "botanical")
eco_guess(df_trees, "common_name", "botanical") %>%
distinct("field_guess")
eco_guess(df_trees, "common_name", "botanical") %>%
distinct(field_guess)
eco_guess(df_trees, "common_name", "botanical") %>%
distinct(field_guess) %>%
flatten()
eco_guess(df_trees, "common_name", "botanical") %>%
distinct(field_guess) %>%
flatten_chr()
eco_guess(df_trees, "common_name", "botanical") %>%
mutate_if(is.factor, as.character) %>%
distinct(field_guess) %>%
flatten_chr()
botanical_name <- eco_guess(df_trees, "common_name", "botanical") %>%
mutate_if(is.factor, as.character) %>%
distinct(field_guess) %>%
flatten_chr()
df_trees
df_trees %>%
mutate(botanical_name = botanical_name)
df_trees <- df_trees %>%
mutate(botanical_name = botanical_name)
eco_run_all(data = df_trees, common_col = "common_name", botanical_col = "botanical_name", dbh_col = "Girth", region = "PiedmtCLT", print_time = TRUE)
eco_run_all(
data = df_trees,
common_col = "common_name",
botanical_col = "botanical_name",
dbh_col = "Girth",
region = "PiedmtCLT",
print_time = TRUE
)
library(tidyverse)
treeco::species %>%
filter(str_detect(common_name, "Black cherry"))
df_trees <- trees %>%
as_tibble() %>%
mutate(common_name = "Black cherry") %>%
select(common_name, Girth)
botanical_name <- eco_guess(df_trees, "common_name", "botanical") %>%
mutate_if(is.factor, as.character) %>%
distinct(field_guess) %>%
flatten_chr()
df_trees <- df_trees %>%
mutate(botanical_name = botanical_name)
eco_run_all(
data = df_trees,
common_col = "common_name",
botanical_col = "botanical_name",
dbh_col = "Girth",
region = "PiedmtCLT",
print_time = TRUE
)
money
library(tidyverse)
treeco::species %>%
filter(str_detect(common_name, "Black cherry"))
df_trees <- trees %>%
as_tibble() %>%
mutate(common_name = "Black cherry") %>%
select(common_name, Girth)
botanical_name <- eco_guess(df_trees, "common_name", "botanical") %>%
mutate_if(is.factor, as.character) %>%
distinct(field_guess) %>%
flatten_chr()
df_trees <- df_trees %>%
mutate(botanical_name = botanical_name)
eco_run_all(
data = df_trees,
common_col = "common_name",
botanical_col = "botanical_name",
dbh_col = "Girth",
region = "PiedmtCLT",
print_time = TRUE
)
